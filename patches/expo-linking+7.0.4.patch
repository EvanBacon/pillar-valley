diff --git a/node_modules/expo-linking/ios/LinkingAppDelegateSubscriber.swift b/node_modules/expo-linking/ios/LinkingAppDelegateSubscriber.swift
index a275c71..9276d84 100644
--- a/node_modules/expo-linking/ios/LinkingAppDelegateSubscriber.swift
+++ b/node_modules/expo-linking/ios/LinkingAppDelegateSubscriber.swift
@@ -1,9 +1,31 @@
 import ExpoModulesCore
 
 public class LinkingAppDelegateSubscriber: ExpoAppDelegateSubscriber {
+  private static let isAppClip: Bool = {
+    if let infoPlist = Bundle.main.infoDictionary, let _ = infoPlist["NSAppClip"] as? [String: Any] {
+      return true
+    }
+    return false
+  }()
+  
   public func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {
     ExpoLinkingRegistry.shared.initialURL = url
     NotificationCenter.default.post(name: onURLReceivedNotification, object: self, userInfo: ["url": url])
     return false
   }
+  
+  public func application(_ application: UIApplication, continue userActivity: NSUserActivity, restorationHandler: @escaping ([any UIUserActivityRestoring]?) -> Void) -> Bool {
+    if userActivity.activityType == NSUserActivityTypeBrowsingWeb, let url = userActivity.webpageURL {
+      
+      if ExpoLinkingRegistry.shared.initialURL == nil {
+        if LinkingAppDelegateSubscriber.isAppClip {
+          ExpoLinkingRegistry.shared.initialURL = url
+        }
+      }
+      
+      NotificationCenter.default.post(name: onURLReceivedNotification, object: self, userInfo: ["url": url])
+      return true
+    }
+    return false
+  }
 }
